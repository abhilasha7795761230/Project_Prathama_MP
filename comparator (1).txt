comparator
  

verilog


module comp(cs,clk,a,b,c,z,ready);
input  cs,clk;
input [15:0] a,b;
output reg ready;
output reg c,z;
integer state =0;
always @(posedge clk)
begin
case(state)
0:begin
if(cs)
state=1;
else
state=0;
end
1:begin
 if(a>b)
 state =2;
 else if(a==b)
 state =3;
 else if(a<b)
 state =4;
 end
 2:state=0;
 3:state =0;
 4:state=0;
 endcase
 end
 always@ (state)
 begin
 case(state)
 0:begin
 ready =1;
 end
 1:ready =0;
 2:begin
   c=1;
   z=0;
   ready=1;
   end
 3:begin
     c=0;
     z=1;
     ready=1;
     end
  4:begin
    c=0;
    z=0;
    ready=1;
    end   
   endcase
    end
   endmodule 

testbench

module comp_tb;
reg cs,clk;
reg [15:0]a,b;
wire ready;
wire [2:0]result;
 comp  U0 (cs,clk,a,b,result,ready);  
 initial 
 begin
 clk =0;
 forever #5 clk=~clk;
 end
 initial 
 begin
 
 cs =0;
 #20 cs =1;
 a = 16'd1; b= 16'd2;
 $display(result);
 #10 cs =0;
  #20 cs =1;
  a = 16'd5; b= 16'd2;
  $display(result);
  #10 cs =0;
    #20 cs =1;
    a = 16'd5; b= 16'd5;
    $display(result);
 #20 $finish;
 end  
endmodule


pc

module pc1(cs,add_in,clk,load,add_out,ready);
input cs,clk,load;
reg [7:0]incr;
input [11:0]add_in;
reg [15:0] pc;
output [15:0]add_out;
output reg ready;
integer state =0;
always@(posedge clk)
begin
case(state)
0:begin
if(cs)
state=1;
else
state=0;
end
1:begin
if(load)
state=2;
else
state=3;
end
2:state=0;
3:state=0;
endcase
end


always@(posedge clk)
begin
case(state)
0:begin
  ready=1;
  end
  1:ready=0;
  2:begin
   pc={4'b0000,add_in};
  ready=1;
  end
  3:begin
  pc={8'b00000000,incr};
  ready=1;
  end
  endcase
  end
  assign add_out =cs? pc:16'bz;
  
  endmodule




testbench



module pc_tb;
reg cs,clk,load;
reg [11:0]add_in;
reg [7:0]incr;
wire ready;
wire [15:0]add_out;
 pc1 U0 (cs,add_in,clk,load,add_out,ready);
initial 
begin
clk =0;
forever #5 clk=~clk;
end

initial 
begin
cs=0;
#10
 cs=1;
 #10
 while(!ready)
 begin
load=0;
incr=8'd5;
#5;
$display(add_out);
end
#10
cs =1;
#10
load =1;
add_in =12'd1;
#10 
$display(add_out);

#20 $finish;
end
endmodule


